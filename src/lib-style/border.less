/**
*生成0.5px的细线
*使用示例：
* .line {
    position: relative; //position应为relative、absolute或fixed
    .border-bottom(solid;  #f1f1f1);   //底部0.5px细线，会占用before伪元素并重置border属性
    .border(solid; #f1f1f1; 5px);     //0.5px的圆角边框，会占用before伪元素并重置border属性
  }
*/
.beforeMixin(@type, @color, @radius){
  content: '';
  position: absolute;
  width: 200%;
  height: 200%;
  top: 0;
  left: 0;
  transform: scale(0.5);
  transform-origin: 0 0;
  box-sizing: border-box;
  pointer-events: none;
  border-radius: @radius*2px;
}

.parentMixin(){
  // position: relative;
  border: none!important;
}

.border(@type: solid, @color: black, @radius: 0) {
  .parentMixin();
  &:before{
    .beforeMixin(@type, @color, @radius);
    border: 1px @type @color;
  }
}
.border-top(@type: solid, @color: black, @radius: 0) {
  .parentMixin();
  &:before{
    .beforeMixin(@type, @color, @radius);
    border-top: 1px @type @color;
  }
}
.border-left(@type: solid, @color: black, @radius: 0) {
  .parentMixin();
  &:before{
    .beforeMixin(@type, @color, @radius);
    border-left: 1px @type @color;
  }
}
.border-bottom(@type: solid, @color: black, @radius: 0) {
  .parentMixin();
  &:before{
    .beforeMixin(@type, @color, @radius);
    border-bottom: 1px @type @color;
  }
}
.border-right(@type: solid, @color: black, @radius: 0) {
  .parentMixin();
  &:before{
    .beforeMixin(@type, @color, @radius);
    border-right: 1px @type @color;
  }
}
